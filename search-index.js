var searchIndex = {};
searchIndex["kdtree"] = {"doc":"# kdtree\nK-dimensional tree for Rust(bucket point-region implementation)","items":[[0,"kdtree","kdtree","",null,null],[3,"KdTree","kdtree::kdtree","",null,null],[3,"NearestIter","","",null,null],[4,"ErrorKind","","",null,null],[13,"WrongDimension","","",0,null],[13,"NonFiniteCoordinate","","",0,null],[13,"ZeroCapacity","","",0,null],[11,"fmt","","",1,null],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"new","","",1,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"new_with_capacity","","",1,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"self"}}],[11,"size","","",1,null],[11,"nearest","","",1,null],[11,"within","","",1,null],[11,"iter_nearest","","",1,null],[11,"add","","",1,null],[11,"next","","",2,null],[0,"distance","kdtree","Defines different distance metrics, in simplest case it defines the\neuclidean distance which is no more than the square root of the sum of the\nsquares of the distances in each dimension.",null,null],[5,"squared_euclidean","kdtree::distance","Returns the squared euclidean distance between two points, when you only\nneed to compare distances, rhather than having the exact distance between\nthe points this metric is benefitial because it avoids the expensive square\nroot computation.",null,null]],"paths":[[4,"ErrorKind"],[3,"KdTree"],[3,"NearestIter"]]};
initSearch(searchIndex);
